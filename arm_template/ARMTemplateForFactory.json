{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "retaildata-adf1"
        },
        "ls_datalake_adls_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'ls_datalake_adls'"
        },
        "ls_blobsa_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_blobsa'"
        },
        "ls_sql_db_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'ls_sql_db'"
        },
        "ls_kv_retaildata_kv_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://retaildata-kv.vault.azure.net/"
        },
        "ls_amazoms3_retaildata_properties_typeProperties_accessKeyId": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "ls_kv_retaildata_kv",
                    "type": "LinkedServiceReference"
                },
                "secretName": "s3accesskeyid"
            }
        },
        "ls_datalake_adls_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://retaildatadatalakesa.dfs.core.windows.net/"
        },
        "ls_sql_db_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "retailsqlserver1.database.windows.net"
        },
        "ls_sql_db_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "retailsqldb"
        },
        "ls_sql_db_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "retaildb"
        },
        "tr_ingest_process_orders_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/c9939a34-52b0-4a0a-9cb5-6a03f1daff58/resourceGroups/retaildata-rg/providers/Microsoft.Storage/storageAccounts/retaildatablobsa"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/ls_kv_retaildata_kv')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('ls_kv_retaildata_kv_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_amazoms3_retaildata')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AmazonS3",
                "typeProperties": {
                    "serviceUrl": "https://s3.amazonaws.com",
                    "accessKeyId": "[parameters('ls_amazoms3_retaildata_properties_typeProperties_accessKeyId')]",
                    "secretAccessKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "ls_kv_retaildata_kv",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "s3accesskey"
                    },
                    "authenticationType": "AccessKey"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_kv_retaildata_kv')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_order_items_s3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_amazoms3_retaildata",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "order_items_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AmazonS3Location",
                        "bucketName": "retail-order-data",
                        "folderPath": "order-items",
                        "fileName": "order_items.csv"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "order_item_id",
                        "type": "String"
                    },
                    {
                        "name": "order_item_order_id",
                        "type": "String"
                    },
                    {
                        "name": "order_item_product_id",
                        "type": "String"
                    },
                    {
                        "name": "order_item_quantity",
                        "type": "String"
                    },
                    {
                        "name": "order_item_subtotal",
                        "type": "String"
                    },
                    {
                        "name": "order_item_product_price",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_amazoms3_retaildata')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_datalake_adls')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_datalake_adls_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_datalake_adls_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_adls_order_items_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_datalake_adls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "order_items_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "order_items",
                        "fileSystem": "landing"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "order_item_id",
                        "type": "String"
                    },
                    {
                        "name": "order_item_order_id",
                        "type": "String"
                    },
                    {
                        "name": "order_item_product_id",
                        "type": "String"
                    },
                    {
                        "name": "order_item_quantity",
                        "type": "String"
                    },
                    {
                        "name": "order_item_subtotal",
                        "type": "String"
                    },
                    {
                        "name": "order_item_product_price",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_datalake_adls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_order_items_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data order items",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AmazonS3ReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_order_items_s3",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_order_items_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "pl_ingest"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_order_items_s3')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_order_items_sink')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_blobsa')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('ls_blobsa_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_blob_orders_data')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_blobsa",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "orders_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "orders.csv",
                        "container": "ordersinput"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "order_id",
                        "type": "String"
                    },
                    {
                        "name": "order_date",
                        "type": "String"
                    },
                    {
                        "name": "order_customer_id",
                        "type": "String"
                    },
                    {
                        "name": "order_status",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_blobsa')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_adls_orders_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_datalake_adls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "orders_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "orders",
                        "fileSystem": "landing"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "order_id",
                        "type": "String"
                    },
                    {
                        "name": "order_date",
                        "type": "String"
                    },
                    {
                        "name": "order_customer_id",
                        "type": "String"
                    },
                    {
                        "name": "order_status",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_datalake_adls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_orders_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy orders data",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_blob_orders_data",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_adls_orders_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "pl_ingest"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_blob_orders_data')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_orders_sink')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/retail_data_flow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_adls_order_items_sink",
                                "type": "DatasetReference"
                            },
                            "name": "orderitemsstream"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_adls_orders_sink",
                                "type": "DatasetReference"
                            },
                            "name": "ordersstream"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_high_value_orders_sink",
                                "type": "DatasetReference"
                            },
                            "name": "sinkhighvalueorders"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_low_value_orders_sink",
                                "type": "DatasetReference"
                            },
                            "name": "sinklowvalueorders"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_erroneous_sink",
                                "type": "DatasetReference"
                            },
                            "name": "sinkerroneousorders"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "orderitemsaggregate"
                        },
                        {
                            "name": "joinorderitemsandorders"
                        },
                        {
                            "name": "selectfromjoin"
                        },
                        {
                            "name": "splitdata"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          order_item_id as string,",
                        "          order_item_order_id as string,",
                        "          order_item_product_id as string,",
                        "          order_item_quantity as integer,",
                        "          order_item_subtotal as float,",
                        "          order_item_product_price as float",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> orderitemsstream",
                        "source(output(",
                        "          order_id as string,",
                        "          order_date as string,",
                        "          order_customer_id as string,",
                        "          order_status as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> ordersstream",
                        "orderitemsstream aggregate(groupBy(order_item_order_id),",
                        "     order_item_subtotal = sum(order_item_subtotal)) ~> orderitemsaggregate",
                        "orderitemsaggregate, ordersstream join(order_item_order_id == order_id,",
                        "     joinType:'outer',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> joinorderitemsandorders",
                        "joinorderitemsandorders select(mapColumn(",
                        "          order_id,",
                        "          order_date,",
                        "          customer_id = order_customer_id,",
                        "          order_status,",
                        "          order_amount = order_item_subtotal",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectfromjoin",
                        "selectfromjoin split(order_amount>500,",
                        "     order_amount<=500,",
                        "     disjoint: false) ~> splitdata@(highValueOrders, lowValueOrders, erroneous)",
                        "splitdata@highValueOrders sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sinkhighvalueorders",
                        "splitdata@lowValueOrders sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sinklowvalueorders",
                        "splitdata@erroneous sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sinkerroneousorders"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_adls_order_items_sink')]",
                "[concat(variables('factoryId'), '/datasets/ds_adls_orders_sink')]",
                "[concat(variables('factoryId'), '/datasets/ds_high_value_orders_sink')]",
                "[concat(variables('factoryId'), '/datasets/ds_low_value_orders_sink')]",
                "[concat(variables('factoryId'), '/datasets/ds_erroneous_sink')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_high_value_orders_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_datalake_adls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "orders_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "high_value_orders",
                        "fileSystem": "output"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_datalake_adls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_low_value_orders_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_datalake_adls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "orders_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "low_value_orders",
                        "fileSystem": "output"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_datalake_adls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_erroneous_sink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_datalake_adls",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "orders_ds"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "erroneous",
                        "fileSystem": "output"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_datalake_adls')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_process_orders_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "retail_data_flow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "retail_data_flow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "orderitemsstream": {},
                                    "ordersstream": {},
                                    "sinkhighvalueorders": {},
                                    "sinklowvalueorders": {},
                                    "sinkerroneousorders": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "pl_process"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/retail_data_flow')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_sql_db')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "server": "[parameters('ls_sql_db_properties_typeProperties_server')]",
                    "database": "[parameters('ls_sql_db_properties_typeProperties_database')]",
                    "encrypt": "mandatory",
                    "trustServerCertificate": false,
                    "hostNameInCertificate": "",
                    "authenticationType": "SQL",
                    "userName": "[parameters('ls_sql_db_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('ls_sql_db_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sql_db')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_sql_db",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "sql_ds"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "order_id",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "order_date",
                        "type": "varchar"
                    },
                    {
                        "name": "order_customer_id",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "order_status",
                        "type": "varchar"
                    },
                    {
                        "name": "order_amount",
                        "type": "float",
                        "precision": 15
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "premium_orders"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_sql_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_adls_to_sql')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data from adls to sql table",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": "high_value_orders",
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_high_value_orders_sink",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_sql_db",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "pl_sql"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_high_value_orders_sink')]",
                "[concat(variables('factoryId'), '/datasets/ds_sql_db')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_execute_orders')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Ingest orders data",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_ingest_orders_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Ingest orders items data",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Ingest orders data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_ingest_order_items_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Process orders",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Ingest orders items data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_process_orders_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Ingest to sql table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Process orders",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_ingest_adls_to_sql",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "execute"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_orders_data')]",
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_order_items_data')]",
                "[concat(variables('factoryId'), '/pipelines/pl_process_orders_data')]",
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_adls_to_sql')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_ingest_process_orders')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pl_execute_orders",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/ordersinput/blobs/",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('tr_ingest_process_orders_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_execute_orders')]"
            ]
        }
    ]
}